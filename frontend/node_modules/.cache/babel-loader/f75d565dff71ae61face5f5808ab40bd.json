{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/davidgonzalez/Downloads/ReadyCar/frontend/src/User/components/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, Fragment } from 'react';\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\nimport gsap from 'gsap';\nimport { ValidateEmail, ValidateInput } from '../../shared/utils/validations';\nimport AuthButton from '../../shared/components/Buttons/AuthButton';\nimport PasswordField from './PasswordField';\n\nconst Register = props => {\n  _s();\n\n  let authForm = useRef(null);\n  const [errors, setErrors] = useState({});\n  const [registerUser, setRegisterUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = registerUser; //onChange + input validation\n\n  const onHandleChange = e => {\n    e.preventDefault();\n    const {\n      name,\n      value\n    } = e.target;\n    let error = ValidateInput(name, value);\n    setErrors(error);\n    setRegisterUser({ ...registerUser,\n      [name]: value\n    });\n  }; //Check password and password2 and submit date\n\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setErrors({\n        msg: 'Password and confirm password does not match'\n      });\n    } else {\n      props.onRegisterHandler(registerUser);\n      setRegisterUser({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n      });\n    }\n\n    ;\n  }; //Gsap entry animaion\n\n\n  useEffect(() => {\n    let tl = gsap.timeline();\n    tl.from(authForm, 1.5, {\n      scale: 0.5,\n      opacity: 0\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    ref: el => authForm = el,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Registro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Crea una cuenta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      onSubmit: onHandleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-fied\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Name...\",\n          value: name,\n          onChange: onHandleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errors\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 37\n        }, this), name.length >= 3 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"checked\",\n          children: /*#__PURE__*/_jsxDEV(AiOutlineCheckCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-fied\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"E-mail...\",\n          value: email,\n          onChange: onHandleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errors\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 38\n        }, this), ValidateEmail.test(email) && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"checked\",\n          children: /*#__PURE__*/_jsxDEV(AiOutlineCheckCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 74\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-fied\",\n        children: /*#__PURE__*/_jsxDEV(PasswordField, {\n          onHandleChange: onHandleChange,\n          value: password,\n          errors: errors.password,\n          passLength: password.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-fied\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password2\",\n          placeholder: \"Confirm password...\",\n          value: password2,\n          onChange: onHandleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), errors.password2 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errors\",\n          children: errors.password2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 42\n        }, this), password2.length >= 6 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"checked\",\n          children: /*#__PURE__*/_jsxDEV(AiOutlineCheckCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 71\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-fied\",\n        children: props.isLoading ? /*#__PURE__*/_jsxDEV(AuthButton, {\n          value: \"Registarse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), errors.msg && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errors\",\n            children: errors.msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"t1hPfZCEQhh12iBuiJnHm44sps0=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/davidgonzalez/Downloads/ReadyCar/frontend/src/User/components/Register.jsx"],"names":["React","useState","useRef","useEffect","Fragment","AiOutlineCheckCircle","gsap","ValidateEmail","ValidateInput","AuthButton","PasswordField","Register","props","authForm","errors","setErrors","registerUser","setRegisterUser","name","email","password","password2","onHandleChange","e","preventDefault","value","target","error","onHandleSubmit","msg","onRegisterHandler","tl","timeline","from","scale","opacity","el","length","test","isLoading"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, Fragment } from 'react'\nimport { AiOutlineCheckCircle } from 'react-icons/ai'\nimport gsap from 'gsap'\n\nimport { ValidateEmail, ValidateInput } from '../../shared/utils/validations'\nimport AuthButton from '../../shared/components/Buttons/AuthButton';\nimport PasswordField from './PasswordField';\n\nconst Register = (props) => {\n\n    let authForm = useRef(null); \n    const [ errors, setErrors ] = useState({});\n    const [ registerUser, setRegisterUser ] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n     });\n\n    const { name, email, password, password2 } = registerUser;\n\n    //onChange + input validation\n    const onHandleChange = (e) => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        let error = ValidateInput(name, value);\n        setErrors(error)\n        setRegisterUser({...registerUser, [name]: value})\n    };\n\n    //Check password and password2 and submit date\n    const onHandleSubmit = (e) => {\n        e.preventDefault();\n        if(password !== password2){\n            setErrors({msg:'Password and confirm password does not match'})\n        }else{\n            props.onRegisterHandler(registerUser)    \n            setRegisterUser({\n                name: '',\n                email: '',\n                password: '',\n                password2: ''\n            });\n        };\n    };\n\n    //Gsap entry animaion\n    useEffect(() => {\n        let tl = gsap.timeline();\n        tl.from(authForm, 1.5, {scale: 0.5, opacity: 0})\n    }, [])\n\n\n    return (\n        <div className='auth-container' ref={el => ( authForm = el)}>\n            <h3>Registro</h3>\n            <p>Crea una cuenta</p>\n            <form className='auth-form' onSubmit={onHandleSubmit}>\n                <div className='input-fied'>\n                    <input type='text' name='name' placeholder='Name...'  \n                    value={name} onChange={onHandleChange} required/>\n                    {errors.name && <p className='errors'>{errors.name}</p>}\n                    {name.length >= 3 && <p className='checked'><AiOutlineCheckCircle /></p>}\n                </div>\n                <div className='input-fied'>\n                    <input type=\"email\" name='email' placeholder='E-mail...'\n                    value={email} onChange={onHandleChange} required/>        \n                    {errors.email && <p className='errors'>{errors.email}</p>}\n                    {ValidateEmail.test(email) && <p className='checked'><AiOutlineCheckCircle /></p>}\n                </div>\n                <div className='input-fied'>\n                    <PasswordField onHandleChange={onHandleChange}\n                                    value={password}\n                                    errors={errors.password}\n                                    passLength={password.length}/>\n                </div>\n                <div className='input-fied'>\n                    <input type=\"password\" name='password2' placeholder='Confirm password...'\n                    value={password2} onChange={onHandleChange} required/>\n                    {errors.password2 && <p className='errors'>{errors.password2}</p>}\n                    { password2.length >= 6 && <p className='checked'><AiOutlineCheckCircle /></p>}\n                </div>\n                <div className='input-fied'>\n                    {\n                        props.isLoading \n                        ? <AuthButton value='Registarse'/>\n                        :\n                        <Fragment>\n                            <input type=\"submit\" value='Register'/>\n                            {errors.msg && <p className='errors'>{errors.msg}</p>}\n                        </Fragment>\n                    }\n                    \n                </div>\n            </form>\n        </div>\n    )\n\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}