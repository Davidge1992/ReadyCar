{"ast":null,"code":"export const ValidateEmail = RegExp(/^\\S+@\\S+\\.\\S+$/);\nexport const ValidateInput = (name, value) => {\n  let errors = {\n    name: '',\n    email: '',\n    firstName: '',\n    lastName: '',\n    password: '',\n    password2: ''\n  };\n\n  switch (name) {\n    case 'lastName':\n      errors.name = value.length < 3 ? 'Last Name must be at least 3 characters!' : '';\n      break;\n\n    case 'firstName':\n      errors.name = value.length < 3 ? 'First Name must be at least 3 characters!' : '';\n      break;\n\n    case 'name':\n      errors.name = value.length < 3 ? 'Name must be at least 3 characters long!' : '';\n      break;\n\n    case 'email':\n      errors.email = ValidateEmail.test(value) ? '' : 'Email is not valid!';\n      break;\n\n    case 'password':\n      errors.password = value.length < 6 ? 'Password must be at least 6 characters long!' : '';\n      break;\n\n    case 'password2':\n      errors.password2 = value.length < 6 ? 'Password must be at least 6 characters long!' : '';\n      break;\n\n    default:\n      throw new Error('Something went wrong!');\n  }\n\n  ;\n  return errors;\n};\n_c = ValidateInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidateInput\");","map":{"version":3,"sources":["/Users/davidgonzalez/Documents/GitHub/ReadyCar/frontend/src/shared/utils/validations.js"],"names":["ValidateEmail","RegExp","ValidateInput","name","value","errors","email","firstName","lastName","password","password2","length","test","Error"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAGC,MAAM,CAAC,gBAAD,CAA5B;AAEP,OAAO,MAAOC,aAAa,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAEvC,MAAIC,MAAM,GAAG;AACTF,IAAAA,IAAI,EAAE,EADG;AAETG,IAAAA,KAAK,EAAE,EAFE;AAGTC,IAAAA,SAAS,EAAE,EAHF;AAITC,IAAAA,QAAQ,EAAE,EAJD;AAKTC,IAAAA,QAAQ,EAAE,EALD;AAMTC,IAAAA,SAAS,EAAE;AANF,GAAb;;AASA,UAAOP,IAAP;AACI,SAAK,UAAL;AACIE,MAAAA,MAAM,CAACF,IAAP,GAAcC,KAAK,CAACO,MAAN,GAAe,CAAf,GACR,0CADQ,GAER,EAFN;AAGI;;AACR,SAAK,WAAL;AACIN,MAAAA,MAAM,CAACF,IAAP,GAAcC,KAAK,CAACO,MAAN,GAAe,CAAf,GACR,2CADQ,GAER,EAFN;AAGI;;AACR,SAAK,MAAL;AACIN,MAAAA,MAAM,CAACF,IAAP,GAAcC,KAAK,CAACO,MAAN,GAAe,CAAf,GACR,0CADQ,GAER,EAFN;AAGI;;AACR,SAAK,OAAL;AACIN,MAAAA,MAAM,CAACC,KAAP,GAAeN,aAAa,CAACY,IAAd,CAAmBR,KAAnB,IACT,EADS,GAET,qBAFN;AAGI;;AACR,SAAK,UAAL;AACIC,MAAAA,MAAM,CAACI,QAAP,GAAkBL,KAAK,CAACO,MAAN,GAAe,CAAf,GACZ,8CADY,GAEZ,EAFN;AAGI;;AACR,SAAK,WAAL;AACIN,MAAAA,MAAM,CAACK,SAAP,GAAmBN,KAAK,CAACO,MAAN,GAAe,CAAf,GACb,8CADa,GAEb,EAFN;AAGI;;AACR;AACI,YAAM,IAAIE,KAAJ,CAAU,uBAAV,CAAN;AAhCR;;AAiCC;AACD,SAAOR,MAAP;AACH,CA9CE;KAAOH,a","sourcesContent":["export const ValidateEmail = RegExp(/^\\S+@\\S+\\.\\S+$/);\n\nexport const  ValidateInput = (name, value) => {\n\n        let errors = {\n            name: '',\n            email: '',\n            firstName: '',\n            lastName: '',\n            password: '',\n            password2: ''\n        };\n\n        switch(name){\n            case 'lastName':\n                errors.name = value.length < 3\n                    ? 'Last Name must be at least 3 characters!'\n                    : '';\n                    break; \n            case 'firstName':\n                errors.name = value.length < 3\n                    ? 'First Name must be at least 3 characters!'\n                    : '';\n                    break; \n            case 'name':\n                errors.name = value.length < 3\n                    ? 'Name must be at least 3 characters long!'\n                    : '';\n                    break; \n            case 'email':\n                errors.email = ValidateEmail.test(value)\n                    ? ''\n                    : 'Email is not valid!';\n                    break;   \n            case 'password':\n                errors.password = value.length < 6\n                    ? 'Password must be at least 6 characters long!'\n                    : '';   \n                    break;    \n            case 'password2':\n                errors.password2 = value.length < 6\n                    ? 'Password must be at least 6 characters long!'\n                    : '';   \n                    break;      \n            default:\n                throw new Error('Something went wrong!');\n        };\n        return errors\n    };"]},"metadata":{},"sourceType":"module"}