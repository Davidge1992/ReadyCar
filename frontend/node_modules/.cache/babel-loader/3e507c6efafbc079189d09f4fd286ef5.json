{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/davidgonzalez/Downloads/ReadyCar/frontend/src/shared/contexts/ThemeContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nexport const themes = {\n  light: {\n    backgroundColor: '#8CD3A7',\n    color: '#010848'\n  },\n  dark: {\n    backgroundColor: '#346642',\n    color: '#FFFFFF'\n  }\n};\nexport const ThemeContext = /*#__PURE__*/createContext(themes.light);\n\nconst ThemeContextProvider = props => {\n  _s();\n\n  const [currentTheme, setCurrentTheme] = useState(themes.light);\n\n  const toggleTheme = () => {\n    currentTheme === themes.light ? setCurrentTheme(themes.dark) : setCurrentTheme(themes.light);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      currentTheme,\n      toggleTheme\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ThemeContextProvider, \"/hcljmg54/ugQhOv/H/X9KBkt/8=\");\n\n_c = ThemeContextProvider;\nexport default ThemeContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"sources":["/Users/davidgonzalez/Downloads/ReadyCar/frontend/src/shared/contexts/ThemeContext.jsx"],"names":["React","createContext","useState","themes","light","backgroundColor","color","dark","ThemeContext","ThemeContextProvider","props","currentTheme","setCurrentTheme","toggleTheme","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,MAAM,GAAG;AAElBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,eAAe,EAAE,SADd;AAEHC,IAAAA,KAAK,EAAE;AAFJ,GAFW;AAMlBC,EAAAA,IAAI,EAAE;AACFF,IAAAA,eAAe,EAAE,SADf;AAEDC,IAAAA,KAAK,EAAE;AAFN;AANY,CAAf;AAYP,OAAO,MAAME,YAAY,gBAAGP,aAAa,CAACE,MAAM,CAACC,KAAR,CAAlC;;AAEP,MAAMK,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AAEpC,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCV,QAAQ,CAACC,MAAM,CAACC,KAAR,CAAlD;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACtBF,IAAAA,YAAY,KAAKR,MAAM,CAACC,KAAxB,GACAQ,eAAe,CAACT,MAAM,CAACI,IAAR,CADf,GAEAK,eAAe,CAACT,MAAM,CAACC,KAAR,CAFf;AAGH,GAJD;;AAMA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACO,MAAAA,YAAD;AAAeE,MAAAA;AAAf,KAA9B;AAAA,cACKH,KAAK,CAACI;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAfD;;GAAML,oB;;KAAAA,oB;AAiBN,eAAeA,oBAAf","sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const themes = { \n    \n    light: {\n        backgroundColor: '#8CD3A7',\n        color: '#010848'\n    },\n    dark: {\n        backgroundColor: '#346642',\n         color: '#FFFFFF'\n    }\n}\n\nexport const ThemeContext = createContext(themes.light);\n\nconst ThemeContextProvider = (props) => {\n\n    const [ currentTheme, setCurrentTheme ] = useState(themes.light);\n\n    const toggleTheme = () => {\n        currentTheme === themes.light ? \n        setCurrentTheme(themes.dark):\n        setCurrentTheme(themes.light)\n    }\n\n    return (\n        <ThemeContext.Provider value={{currentTheme, toggleTheme}}>\n            {props.children}\n        </ThemeContext.Provider>\n    )\n}\n\nexport default ThemeContextProvider"]},"metadata":{},"sourceType":"module"}