{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/davidgonzalez/Downloads/ReadyCar/frontend/src/User/pages/ResetPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\nimport { FaRegArrowAltCircleLeft } from 'react-icons/fa';\nimport axios from '../../axios';\nimport gsap from 'gsap';\nimport { ValidateEmail, ValidateInput } from '../../shared/utils/validations';\nimport Layout from '../../shared/components/Layout/Layout';\n\nconst ResetPage = props => {\n  _s();\n\n  let authForm = useRef(null);\n  let settings = useRef(null);\n  let tl = useRef();\n  const [errors, setErrors] = useState({});\n  const [emailToReset, setEmail] = useState({\n    email: ''\n  });\n  const history = useHistory();\n  const {\n    email\n  } = emailToReset; //Gsap entry animation\n\n  useEffect(() => {\n    tl.current = gsap.timeline();\n    tl.current.fromTo(authForm, 1.5, {\n      scale: 0.5,\n      opacity: 0\n    }, {\n      scale: 1,\n      opacity: 1\n    }).from(settings, 1, {\n      y: 20,\n      opacity: 0\n    }, 0.5);\n  }, [tl]); //onCahnge + validate input\n\n  const onHandleChange = e => {\n    e.preventDefault();\n    const {\n      name,\n      value\n    } = e.target;\n    let error = ValidateInput(name, value);\n    setErrors(error);\n    setEmail({ ...emailToReset,\n      [name]: value\n    });\n  }; //post new email to db\n\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    axios.post('/emails/reset', emailToReset, {\n      'Content-Type': 'application/json'\n    }).then(res => {}).catch(err => {\n      console.log(err);\n    });\n    setEmail({\n      email: ''\n    });\n    history.push('/');\n  };\n\n  const backToLogin = () => {\n    history.goBack();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      onClick: backToLogin,\n      ref: el => settings = el,\n      children: [/*#__PURE__*/_jsxDEV(FaRegArrowAltCircleLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Move Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      ref: el => authForm = el,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Reset password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"We will send you reset link per E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"auth-form\",\n        onSubmit: onSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-fied\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"E-mail...\",\n            value: email,\n            onChange: onHandleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errors\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 42\n          }, this), ValidateEmail.test(email) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"checked\",\n            children: /*#__PURE__*/_jsxDEV(AiOutlineCheckCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 78\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-fied\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Cambiar Contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ResetPage, \"cpsMY8nz2vE7a8Pi/ZkIoHWxd8Q=\", false, function () {\n  return [useHistory];\n});\n\n_c = ResetPage;\nexport default ResetPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPage\");","map":{"version":3,"sources":["/Users/davidgonzalez/Downloads/ReadyCar/frontend/src/User/pages/ResetPage.jsx"],"names":["React","useState","useRef","useEffect","useHistory","AiOutlineCheckCircle","FaRegArrowAltCircleLeft","axios","gsap","ValidateEmail","ValidateInput","Layout","ResetPage","props","authForm","settings","tl","errors","setErrors","emailToReset","setEmail","email","history","current","timeline","fromTo","scale","opacity","from","y","onHandleChange","e","preventDefault","name","value","target","error","onSubmitHandler","post","then","res","catch","err","console","log","push","backToLogin","goBack","el","test"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\nimport { FaRegArrowAltCircleLeft } from 'react-icons/fa';\nimport axios from '../../axios';\nimport gsap from 'gsap';\n\nimport { ValidateEmail, ValidateInput } from '../../shared/utils/validations';\nimport Layout from '../../shared/components/Layout/Layout';\n\nconst ResetPage = (props) => {\n\n    let authForm = useRef(null); \n    let settings = useRef(null);\n    let tl = useRef()\n    const [ errors, setErrors ] = useState({});\n    const [ emailToReset, setEmail ] = useState({email: ''});\n    const history = useHistory();\n\n    const { email } = emailToReset\n\n    //Gsap entry animation\n    useEffect(() => {\n        tl.current = gsap.timeline();\n        tl.current.fromTo(authForm, 1.5, {scale: 0.5, opacity: 0}, {scale: 1, opacity: 1})\n                  .from(settings, 1, {y: 20, opacity: 0}, 0.5)\n    }, [tl]);\n\n    //onCahnge + validate input\n    const onHandleChange = (e) => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        let error = ValidateInput(name, value);\n        setErrors(error)\n        setEmail({...emailToReset, [name]: value})\n    };\n\n    //post new email to db\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n            axios.post('/emails/reset', emailToReset, \n            {'Content-Type': 'application/json'})\n                 .then(res => {               \n            }).catch(err => {\n                  console.log(err);\n            });\n        setEmail({email: ''});\n        history.push('/');\n    };\n\n    const backToLogin = () => {\n        history.goBack()\n    };\n\n    return(\n        <Layout>\n            <div className='settings' onClick={backToLogin} ref={ el => ( settings = el )}>\n                <FaRegArrowAltCircleLeft /><span>Move Back</span></div>\n            <div className='auth-container' ref={el => ( authForm = el)}>\n                <h3>Reset password</h3>\n                <p>We will send you reset link per E-mail</p>\n                <form className='auth-form' onSubmit={onSubmitHandler}>\n                    <div className='input-fied'>\n                        <input type=\"email\" name='email' placeholder='E-mail...'\n                        value={email} onChange={onHandleChange} required/>        \n                        {errors.email && <p className='errors'>{errors.email}</p>}\n                        {ValidateEmail.test(email) && <p className='checked'><AiOutlineCheckCircle /></p>}\n                    </div>\n                    <div className='input-fied'>     \n                        <input type=\"submit\" value='Cambiar Contraseña'/>\n                    </div>\n                </form>\n            </div>\n        </Layout>\n        )\n}\n\nexport default ResetPage;"]},"metadata":{},"sourceType":"module"}